There are two ways (both untested at application level, only tested at installation level) to install the anaconda environment.
1. In navigator: choose Import. (Note: one might need to add the conda-forge channel in this method, too. Also, setting the python version to 3.8.12 is necessary.) Select env_2ppy_navigator.yaml. In a few minutes, it should arrive to the pip-installed packages and throw an error.
	Ignore it. Once the environment is ready, proceed with installing packages manually, see below.
2. In anaconda prompt: 
	add the conda-forge channel first: conda config --add channels conda-forge
	cd to 2p-py/conda folder. Type "conda create --name <environment name> --file env_2ppy_prompt.txt python=3.8.12". Starting the environment name with a number is not advised. Proceed with installing the packages below manually.
In both cases, after successful creation of the environment, manually install the packages listed below.
Also set up a .env file in the 2p-py folder (see sample .env) to be able to run most notebooks.

Tips for pycharm:
create a conda environment using 2p-py-env.txt. It will install almost all packages except the list below.
Set this to the project interpreter in PyCharm. It might still run the default anaconda interpreter, and throw errors while importing stuff. Set the correct interpeter in the project configurations!


Manually installed packages:

conda install statsmodels
conda install multiprocess  # alternative to multiprocessing that works with IPython (Jupyter notebook, presumably also anaconda prompt). https://stackoverflow.com/questions/41385708/multiprocessing-example-giving-attributeerror

pip install pyabf  (2.3.7)
pip install pims==0.5.0 (0.5.0)
pip install pims_nd2 (1.1, ONLY after installing pims. At this time, the latest pims, pims 0.6.1, breaks the installation with WinError 14001)
pip install numba (or conda install numba) (0.56.4)
pip install tables (for pandas df.to_hdf() )
pip install pyedflib (0.1.33)
(if pip is not recognized, try conda install pip)

Other:
Install matlab engine for python. See Test Matlab Integration notebook.
ffmpeg needs to be installed for exporting videos. (e. g. Play nd2 along LFP, movement.ipynb). conda install -c conda-forge ffmpeg
	This is only the python package, though. Need to install the appropriate version from here: https://ffmpeg.org/download.html
	One version that worked was: ffmpeg version 4.3.2-2021-02-20-full_build-www.gyan.dev. I.e. full build built by gyan should work. Download the 7z file, 
	use 7-zip to extract it to an appropriate place (like C:\\ffmpeg. Warning: if extracted in Program Files, there will be a lot of issues with permissions!
	Even extracting there does not work easily). Then add the bin folder to the Path environmental variable (Edit the system environment variables). 
	Need to restart the prompt (Anaconda prompt) afterwards! Run ffmpeg and see if it works. If yes, ffmpeg should be installed. 
	Test the python library too (import ffmpeg) before using it.
Make sure to install VC++ redist! pims and pims_nd2 require it.
	
	
The manually installed packages:
  - matlabengineforpython==R2020b=pypi_0
  - numba==0.56.4=pypi_0
  - pyedflib==0.1.33=pypi_0
  - numexpr==2.8.4=pypi_0
  - cython==0.29.34=pypi_0
  - pims-nd2==1.1=pypi_0
  - pyabf==2.3.7=pypi_0
  - h5py==3.8.0=pypi_0
  - msgpack==1.0.5=pypi_0
  - pytest==7.2.1=pypi_0
  - iniconfig==2.0.0=pypi_0
  - tables==3.8.0=pypi_0
  - exceptiongroup==1.1.0=pypi_0
  - blosc2==2.0.0=pypi_0
  - py-cpuinfo==9.0.0=pypi_0
  - llvmlite==0.39.1=pypi_0